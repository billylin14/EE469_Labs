Analysis & Synthesis report for DE1_SoC
Wed Oct 14 18:46:17 2020
Quartus Prime Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Analysis & Synthesis Summary
  3. Analysis & Synthesis Settings
  4. Parallel Compilation
  5. Analysis & Synthesis Source Files Read
  6. Analysis & Synthesis Resource Usage Summary
  7. Analysis & Synthesis Resource Utilization by Entity
  8. General Register Statistics
  9. Multiplexer Restructuring Statistics (Restructuring Performed)
 10. Parameter Settings for User Entity Instance: Top-level Entity: |mux32x1_stack
 11. Port Connectivity Checks: "mux32x1:buildMux[0].muxxie|mux8x1:m5"
 12. Post-Synthesis Netlist Statistics for Top Partition
 13. Elapsed Time Per Partition
 14. Analysis & Synthesis Messages
 15. Analysis & Synthesis Suppressed Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.



+-------------------------------------------------------------------------------+
; Analysis & Synthesis Summary                                                  ;
+---------------------------------+---------------------------------------------+
; Analysis & Synthesis Status     ; Successful - Wed Oct 14 18:46:16 2020       ;
; Quartus Prime Version           ; 17.0.0 Build 595 04/25/2017 SJ Lite Edition ;
; Revision Name                   ; DE1_SoC                                     ;
; Top-level Entity Name           ; mux32x1_stack                               ;
; Family                          ; Cyclone V                                   ;
; Logic utilization (in ALMs)     ; N/A                                         ;
; Total registers                 ; 0                                           ;
; Total pins                      ; 2,117                                       ;
; Total virtual pins              ; 0                                           ;
; Total block memory bits         ; 0                                           ;
; Total DSP Blocks                ; 0                                           ;
; Total HSSI RX PCSs              ; 0                                           ;
; Total HSSI PMA RX Deserializers ; 0                                           ;
; Total HSSI TX PCSs              ; 0                                           ;
; Total HSSI PMA TX Serializers   ; 0                                           ;
; Total PLLs                      ; 0                                           ;
; Total DLLs                      ; 0                                           ;
+---------------------------------+---------------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Settings                                                                                             ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Option                                                                          ; Setting            ; Default Value      ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Device                                                                          ; 5CSEMA5F31C6       ;                    ;
; Top-level entity name                                                           ; mux32x1_stack      ; DE1_SoC            ;
; Family name                                                                     ; Cyclone V          ; Cyclone V          ;
; State Machine Processing                                                        ; User-Encoded       ; Auto               ;
; Use smart compilation                                                           ; Off                ; Off                ;
; Enable parallel Assembler and TimeQuest Timing Analyzer during compilation      ; On                 ; On                 ;
; Enable compact report table                                                     ; Off                ; Off                ;
; Restructure Multiplexers                                                        ; Auto               ; Auto               ;
; MLAB Add Timing Constraints For Mixed-Port Feed-Through Mode Setting Don't Care ; Off                ; Off                ;
; Create Debugging Nodes for IP Cores                                             ; Off                ; Off                ;
; Preserve fewer node names                                                       ; On                 ; On                 ;
; OpenCore Plus hardware evaluation                                               ; Enable             ; Enable             ;
; Verilog Version                                                                 ; Verilog_2001       ; Verilog_2001       ;
; VHDL Version                                                                    ; VHDL_1993          ; VHDL_1993          ;
; Safe State Machine                                                              ; Off                ; Off                ;
; Extract Verilog State Machines                                                  ; On                 ; On                 ;
; Extract VHDL State Machines                                                     ; On                 ; On                 ;
; Ignore Verilog initial constructs                                               ; Off                ; Off                ;
; Iteration limit for constant Verilog loops                                      ; 5000               ; 5000               ;
; Iteration limit for non-constant Verilog loops                                  ; 250                ; 250                ;
; Add Pass-Through Logic to Inferred RAMs                                         ; On                 ; On                 ;
; Infer RAMs from Raw Logic                                                       ; On                 ; On                 ;
; Parallel Synthesis                                                              ; On                 ; On                 ;
; DSP Block Balancing                                                             ; Auto               ; Auto               ;
; NOT Gate Push-Back                                                              ; On                 ; On                 ;
; Power-Up Don't Care                                                             ; On                 ; On                 ;
; Remove Redundant Logic Cells                                                    ; Off                ; Off                ;
; Remove Duplicate Registers                                                      ; On                 ; On                 ;
; Ignore CARRY Buffers                                                            ; Off                ; Off                ;
; Ignore CASCADE Buffers                                                          ; Off                ; Off                ;
; Ignore GLOBAL Buffers                                                           ; Off                ; Off                ;
; Ignore ROW GLOBAL Buffers                                                       ; Off                ; Off                ;
; Ignore LCELL Buffers                                                            ; Off                ; Off                ;
; Ignore SOFT Buffers                                                             ; On                 ; On                 ;
; Limit AHDL Integers to 32 Bits                                                  ; Off                ; Off                ;
; Optimization Technique                                                          ; Balanced           ; Balanced           ;
; Carry Chain Length                                                              ; 70                 ; 70                 ;
; Auto Carry Chains                                                               ; On                 ; On                 ;
; Auto Open-Drain Pins                                                            ; On                 ; On                 ;
; Perform WYSIWYG Primitive Resynthesis                                           ; Off                ; Off                ;
; Auto ROM Replacement                                                            ; On                 ; On                 ;
; Auto RAM Replacement                                                            ; On                 ; On                 ;
; Auto DSP Block Replacement                                                      ; On                 ; On                 ;
; Auto Shift Register Replacement                                                 ; Auto               ; Auto               ;
; Allow Shift Register Merging across Hierarchies                                 ; Auto               ; Auto               ;
; Auto Clock Enable Replacement                                                   ; On                 ; On                 ;
; Strict RAM Replacement                                                          ; Off                ; Off                ;
; Allow Synchronous Control Signals                                               ; On                 ; On                 ;
; Force Use of Synchronous Clear Signals                                          ; Off                ; Off                ;
; Auto Resource Sharing                                                           ; Off                ; Off                ;
; Allow Any RAM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any ROM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any Shift Register Size For Recognition                                   ; Off                ; Off                ;
; Use LogicLock Constraints during Resource Balancing                             ; On                 ; On                 ;
; Ignore translate_off and synthesis_off directives                               ; Off                ; Off                ;
; Timing-Driven Synthesis                                                         ; On                 ; On                 ;
; Report Parameter Settings                                                       ; On                 ; On                 ;
; Report Source Assignments                                                       ; On                 ; On                 ;
; Report Connectivity Checks                                                      ; On                 ; On                 ;
; Ignore Maximum Fan-Out Assignments                                              ; Off                ; Off                ;
; Synchronization Register Chain Length                                           ; 3                  ; 3                  ;
; PowerPlay Power Optimization During Synthesis                                   ; Normal compilation ; Normal compilation ;
; HDL message level                                                               ; Level2             ; Level2             ;
; Suppress Register Optimization Related Messages                                 ; Off                ; Off                ;
; Number of Removed Registers Reported in Synthesis Report                        ; 5000               ; 5000               ;
; Number of Swept Nodes Reported in Synthesis Report                              ; 5000               ; 5000               ;
; Number of Inverted Registers Reported in Synthesis Report                       ; 100                ; 100                ;
; Clock MUX Protection                                                            ; On                 ; On                 ;
; Auto Gated Clock Conversion                                                     ; Off                ; Off                ;
; Block Design Naming                                                             ; Auto               ; Auto               ;
; SDC constraint protection                                                       ; Off                ; Off                ;
; Synthesis Effort                                                                ; Auto               ; Auto               ;
; Shift Register Replacement - Allow Asynchronous Clear Signal                    ; On                 ; On                 ;
; Pre-Mapping Resynthesis Optimization                                            ; Off                ; Off                ;
; Analysis & Synthesis Message Level                                              ; Medium             ; Medium             ;
; Disable Register Merging Across Hierarchies                                     ; Auto               ; Auto               ;
; Resource Aware Inference For Block RAM                                          ; On                 ; On                 ;
; Automatic Parallel Synthesis                                                    ; On                 ; On                 ;
; Partial Reconfiguration Bitstream ID                                            ; Off                ; Off                ;
+---------------------------------------------------------------------------------+--------------------+--------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
+----------------------------+-------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Source Files Read                                                                                                                ;
+----------------------------------+-----------------+------------------------------+---------------------------------------------------------+---------+
; File Name with User-Entered Path ; Used in Netlist ; File Type                    ; File Name with Absolute Path                            ; Library ;
+----------------------------------+-----------------+------------------------------+---------------------------------------------------------+---------+
; mux32x1.sv                       ; yes             ; User SystemVerilog HDL File  ; C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1.sv       ;         ;
; mux2x1.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux2x1.sv        ;         ;
; mux8x1.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux8x1.sv        ;         ;
; mux32x1_stack.sv                 ; yes             ; User SystemVerilog HDL File  ; C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1_stack.sv ;         ;
+----------------------------------+-----------------+------------------------------+---------------------------------------------------------+---------+


+---------------------------------------------------------------+
; Analysis & Synthesis Resource Usage Summary                   ;
+---------------------------------------------+-----------------+
; Resource                                    ; Usage           ;
+---------------------------------------------+-----------------+
; Estimate of Logic utilization (ALMs needed) ; 641             ;
;                                             ;                 ;
; Combinational ALUT usage for logic          ; 705             ;
;     -- 7 input functions                    ; 0               ;
;     -- 6 input functions                    ; 576             ;
;     -- 5 input functions                    ; 128             ;
;     -- 4 input functions                    ; 0               ;
;     -- <=3 input functions                  ; 1               ;
;                                             ;                 ;
; Dedicated logic registers                   ; 0               ;
;                                             ;                 ;
; I/O pins                                    ; 2117            ;
;                                             ;                 ;
; Total DSP Blocks                            ; 0               ;
;                                             ;                 ;
; Maximum fan-out node                        ; select[2]~input ;
; Maximum fan-out                             ; 321             ;
; Total fan-out                               ; 6279            ;
; Average fan-out                             ; 1.27            ;
+---------------------------------------------+-----------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Resource Utilization by Entity                                                                                                                                                                                         ;
+----------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+------------------------------------------------------------------+---------------+--------------+
; Compilation Hierarchy Node       ; Combinational ALUTs ; Dedicated Logic Registers ; Block Memory Bits ; DSP Blocks ; Pins ; Virtual Pins ; Full Hierarchy Name                                              ; Entity Name   ; Library Name ;
+----------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+------------------------------------------------------------------+---------------+--------------+
; |mux32x1_stack                   ; 705 (0)             ; 0 (0)                     ; 0                 ; 0          ; 2117 ; 0            ; |mux32x1_stack                                                   ; mux32x1_stack ; work         ;
;    |mux32x1:buildMux[0].muxxie|  ; 12 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[0].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 12 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[0].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 12 (12)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[0].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[10].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[10].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[10].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[10].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[11].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[11].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[11].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[11].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[12].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[12].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[12].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[12].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[13].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[13].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[13].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[13].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[14].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[14].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[14].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[14].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[15].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[15].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[15].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[15].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[16].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[16].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[16].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[16].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[17].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[17].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[17].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[17].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[18].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[18].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[18].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[18].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[19].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[19].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[19].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[19].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[1].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[1].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[1].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[1].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[20].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[20].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[20].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[20].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[21].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[21].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[21].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[21].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[22].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[22].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[22].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[22].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[23].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[23].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[23].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[23].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[24].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[24].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[24].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[24].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[25].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[25].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[25].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[25].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[26].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[26].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[26].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[26].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[27].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[27].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[27].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[27].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[28].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[28].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[28].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[28].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[29].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[29].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[29].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[29].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[2].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[2].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[2].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[2].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[30].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[30].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[30].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[30].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[31].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[31].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[31].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[31].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[32].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[32].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[32].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[32].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[33].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[33].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[33].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[33].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[34].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[34].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[34].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[34].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[35].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[35].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[35].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[35].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[36].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[36].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[36].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[36].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[37].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[37].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[37].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[37].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[38].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[38].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[38].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[38].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[39].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[39].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[39].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[39].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[3].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[3].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[3].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[3].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[40].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[40].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[40].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[40].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[41].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[41].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[41].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[41].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[42].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[42].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[42].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[42].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[43].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[43].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[43].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[43].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[44].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[44].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[44].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[44].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[45].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[45].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[45].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[45].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[46].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[46].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[46].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[46].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[47].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[47].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[47].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[47].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[48].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[48].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[48].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[48].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[49].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[49].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[49].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[49].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[4].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[4].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[4].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[4].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[50].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[50].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[50].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[50].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[51].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[51].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[51].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[51].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[52].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[52].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[52].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[52].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[53].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[53].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[53].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[53].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[54].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[54].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[54].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[54].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[55].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[55].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[55].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[55].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[56].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[56].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[56].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[56].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[57].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[57].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[57].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[57].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[58].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[58].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[58].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[58].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[59].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[59].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[59].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[59].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[5].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[5].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[5].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[5].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[60].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[60].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[60].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[60].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[61].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[61].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[61].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[61].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[62].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[62].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[62].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[62].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[63].muxxie| ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[63].muxxie                       ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[63].muxxie|mux8x1:m5             ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[63].muxxie|mux8x1:m5|mux2x1:mux5 ; mux2x1        ; work         ;
;    |mux32x1:buildMux[6].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[6].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[6].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[6].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[7].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[7].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[7].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[7].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[8].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[8].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[8].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[8].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
;    |mux32x1:buildMux[9].muxxie|  ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[9].muxxie                        ; mux32x1       ; work         ;
;       |mux8x1:m5|                ; 11 (0)              ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[9].muxxie|mux8x1:m5              ; mux8x1        ; work         ;
;          |mux2x1:mux5|           ; 11 (11)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |mux32x1_stack|mux32x1:buildMux[9].muxxie|mux8x1:m5|mux2x1:mux5  ; mux2x1        ; work         ;
+----------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+------------------------------------------------------------------+---------------+--------------+
Note: For table entries with two numbers listed, the numbers in parentheses indicate the number of resources of the given type used by the specific entity alone. The numbers listed outside of parentheses indicate the total resources of the given type used by the specific entity and all of its sub-entities in the hierarchy.


+------------------------------------------------------+
; General Register Statistics                          ;
+----------------------------------------------+-------+
; Statistic                                    ; Value ;
+----------------------------------------------+-------+
; Total registers                              ; 0     ;
; Number of registers using Synchronous Clear  ; 0     ;
; Number of registers using Synchronous Load   ; 0     ;
; Number of registers using Asynchronous Clear ; 0     ;
; Number of registers using Asynchronous Load  ; 0     ;
; Number of registers using Clock Enable       ; 0     ;
; Number of registers using Preset             ; 0     ;
+----------------------------------------------+-------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Multiplexer Restructuring Statistics (Restructuring Performed)                                                                                                                      ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+-----------------------------------------------------------------------+
; Multiplexer Inputs ; Bus Width ; Baseline Area ; Area if Restructured ; Saving if Restructured ; Registered ; Example Multiplexer Output                                            ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+-----------------------------------------------------------------------+
; 32:1               ; 64 bits   ; 1344 LEs      ; 1344 LEs             ; 0 LEs                  ; No         ; |mux32x1_stack|mux32x1:buildMux[0].muxxie|mux8x1:m5|mux2x1:mux5|outOr ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+-----------------------------------------------------------------------+


+-------------------------------------------------------------------------------+
; Parameter Settings for User Entity Instance: Top-level Entity: |mux32x1_stack ;
+----------------+-------+------------------------------------------------------+
; Parameter Name ; Value ; Type                                                 ;
+----------------+-------+------------------------------------------------------+
; WIDTH          ; 64    ; Signed Integer                                       ;
+----------------+-------+------------------------------------------------------+
Note: In order to hide this table in the UI and the text report file, please set the "Show Parameter Settings in Synthesis Report" option in "Analysis and Synthesis Settings -> More Settings" to "Off".


+------------------------------------------------------------------+
; Port Connectivity Checks: "mux32x1:buildMux[0].muxxie|mux8x1:m5" ;
+-------------+-------+----------+---------------------------------+
; Port        ; Type  ; Severity ; Details                         ;
+-------------+-------+----------+---------------------------------+
; selector[2] ; Input ; Info     ; Stuck at GND                    ;
; in[7..4]    ; Input ; Info     ; Stuck at GND                    ;
+-------------+-------+----------+---------------------------------+


+-----------------------------------------------------+
; Post-Synthesis Netlist Statistics for Top Partition ;
+-----------------------+-----------------------------+
; Type                  ; Count                       ;
+-----------------------+-----------------------------+
; arriav_lcell_comb     ; 705                         ;
;     normal            ; 705                         ;
;         2 data inputs ; 1                           ;
;         5 data inputs ; 128                         ;
;         6 data inputs ; 576                         ;
; boundary_port         ; 2117                        ;
;                       ;                             ;
; Max LUT depth         ; 3.00                        ;
; Average LUT depth     ; 2.88                        ;
+-----------------------+-----------------------------+


+-------------------------------+
; Elapsed Time Per Partition    ;
+----------------+--------------+
; Partition Name ; Elapsed Time ;
+----------------+--------------+
; Top            ; 00:02:25     ;
+----------------+--------------+


+-------------------------------+
; Analysis & Synthesis Messages ;
+-------------------------------+
Info: *******************************************************************
Info: Running Quartus Prime Analysis & Synthesis
    Info: Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition
    Info: Processing started: Wed Oct 14 18:42:36 2020
Info: Command: quartus_map --read_settings_files=on --write_settings_files=off DE1_SoC -c DE1_SoC
Info (20030): Parallel compilation is enabled and will use 2 of the 2 processors detected
Warning (12019): Can't analyze file -- file DE1_SoC.sv is missing
Info (12021): Found 3 design units, including 3 entities, in source file register.sv
    Info (12023): Found entity 1: D_FF File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/register.sv Line: 8
    Info (12023): Found entity 2: register File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/register.sv Line: 21
    Info (12023): Found entity 3: register_dut_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/register.sv Line: 37
Info (12021): Found 2 design units, including 2 entities, in source file decoder.sv
    Info (12023): Found entity 1: decoder5x32 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder.sv Line: 9
    Info (12023): Found entity 2: decoder5x32_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder.sv Line: 28
Info (12021): Found 2 design units, including 2 entities, in source file decoder2x4.sv
    Info (12023): Found entity 1: decoder2x4 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder2x4.sv Line: 2
    Info (12023): Found entity 2: decoder_2x4_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder2x4.sv Line: 16
Info (12021): Found 2 design units, including 2 entities, in source file decoder3x8.sv
    Info (12023): Found entity 1: decoder3x8 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder3x8.sv Line: 2
    Info (12023): Found entity 2: decoder_3x8_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder3x8.sv Line: 18
Info (12021): Found 2 design units, including 2 entities, in source file decoder1x2.sv
    Info (12023): Found entity 1: decoder1x2 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder1x2.sv Line: 2
    Info (12023): Found entity 2: decoder_1x2_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/decoder1x2.sv Line: 15
Info (12021): Found 2 design units, including 2 entities, in source file mux32x1.sv
    Info (12023): Found entity 1: mux32x1 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1.sv Line: 2
    Info (12023): Found entity 2: mux32x1_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1.sv Line: 17
Info (12021): Found 2 design units, including 2 entities, in source file mux2x1.sv
    Info (12023): Found entity 1: mux2x1 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux2x1.sv Line: 2
    Info (12023): Found entity 2: mux2x1_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux2x1.sv Line: 18
Info (12021): Found 2 design units, including 2 entities, in source file mux8x1.sv
    Info (12023): Found entity 1: mux8x1 File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux8x1.sv Line: 2
    Info (12023): Found entity 2: mux8x1_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux8x1.sv Line: 18
Info (12021): Found 0 design units, including 0 entities, in source file arm64bitregister.sv
Info (12021): Found 2 design units, including 2 entities, in source file mux32x1_stack.sv
    Info (12023): Found entity 1: mux32x1_stack File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1_stack.sv Line: 1
    Info (12023): Found entity 2: mux32x1_stack_testbench File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1_stack.sv Line: 16
Info (12127): Elaborating entity "mux32x1_stack" for the top level hierarchy
Info (12128): Elaborating entity "mux32x1" for hierarchy "mux32x1:buildMux[0].muxxie" File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1_stack.sv Line: 10
Info (12128): Elaborating entity "mux8x1" for hierarchy "mux32x1:buildMux[0].muxxie|mux8x1:m1" File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux32x1.sv Line: 8
Info (12128): Elaborating entity "mux2x1" for hierarchy "mux32x1:buildMux[0].muxxie|mux8x1:m1|mux2x1:mux1" File: C:/Users/wutzk/Desktop/EE469_Labs/Lab1/mux8x1.sv Line: 9
Info (286030): Timing-Driven Synthesis is running
Info (144001): Generated suppressed messages file C:/Users/wutzk/Desktop/EE469_Labs/Lab1/output_files/DE1_SoC.map.smsg
Info (16010): Generating hard_block partition "hard_block:auto_generated_inst"
    Info (16011): Adding 0 node(s), including 0 DDIO, 0 PLL, 0 transceiver and 0 LCELL
Info (21057): Implemented 2822 device resources after synthesis - the final resource count might be different
    Info (21058): Implemented 2053 input pins
    Info (21059): Implemented 64 output pins
    Info (21061): Implemented 705 logic cells
Info: Quartus Prime Analysis & Synthesis was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 4836 megabytes
    Info: Processing ended: Wed Oct 14 18:46:17 2020
    Info: Elapsed time: 00:03:41
    Info: Total CPU time (on all processors): 00:03:03


+------------------------------------------+
; Analysis & Synthesis Suppressed Messages ;
+------------------------------------------+
The suppressed messages can be found in C:/Users/wutzk/Desktop/EE469_Labs/Lab1/output_files/DE1_SoC.map.smsg.


